/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package cell;


import static forms.appointment.pending_table;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static forms.add_appointment.txtCheckin;
import static forms.add_appointment.txtTime;
import static forms.add_appointment.txtcstname;
import static forms.add_appointment.txtsr;
import static forms.add_appointment.txtprice;
import static forms.add_appointment.txtea;
/**
 *
 * @author Jake Marson Nable
 */
public class panelAction extends javax.swing.JPanel {

   private static final String username = "root" ;
    private static final String password = "1234" ;
    private static final String dataconn = "jdbc:mysql://127.0.0.1:3306/workjob" ; 
    
    Connection sql = null;
    PreparedStatement pst  = null;
    ResultSet rs = null;
    int i, q, id, deleteitem;
    
  /**
     * Creates new form panelAction
     */
    public panelAction() {
        initComponents();
    }
 public void UpdateDb() {
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        sql = DriverManager.getConnection(dataconn, username, password);
        pst = sql.prepareStatement("SELECT * FROM workjob");
        rs = pst.executeQuery();
        
        ResultSetMetaData stdata = rs.getMetaData();
        
        q = stdata.getColumnCount();
        
         DefaultTableModel RecordTable = (DefaultTableModel) pending_table.getModel();
         RecordTable.setRowCount(0);
         
        while (rs.next()) {
            
            Vector<String> columnData = new Vector<>();
            for ( i = 1; i <= q; i++) { 
                columnData.add(rs.getString("id"));
                columnData.add(rs.getString("check_in"));
                columnData.add(rs.getString("Time"));
                columnData.add(rs.getString("Customer_name"));
                columnData.add(rs.getString("Service_rendered"));
                columnData.add(rs.getString("Price"));
                columnData.add(rs.getString("Employee_Assigned"));
            }
            RecordTable.addRow(columnData);
        }
       
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e.getMessage()); // Displaying error message
    }
}
 /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TAB_edit = new cell.actionButton();
        TAB_delete = new cell.actionButton();

        TAB_edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-edit-24.png"))); // NOI18N
        TAB_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TAB_editActionPerformed(evt);
            }
        });

        TAB_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-delete-24.png"))); // NOI18N
        TAB_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TAB_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(TAB_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TAB_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TAB_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TAB_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TAB_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TAB_deleteActionPerformed

 
    DefaultTableModel recordTable = (DefaultTableModel) pending_table.getModel();
    int selectedRows = pending_table.getSelectedRow();
    
    try {
        id = Integer.parseInt(recordTable.getValueAt(selectedRows, 0).toString());
        
        deleteitem = JOptionPane.showConfirmDialog(null, "Confirm if you want to delete item", "warning",JOptionPane.YES_NO_OPTION);
        if (deleteitem == JOptionPane.YES_OPTION) {
            
           Class.forName("com.mysql.cj.jdbc.Driver");
        sql = DriverManager.getConnection(dataconn, username, password); 
        pst = sql.prepareStatement("delete from workjob where id =? ");
        
        pst.setInt(1, id);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(this, "record deleted");
        UpdateDb();
        
        }
        
    }
   
 catch (Exception ex) {
    JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
    ex.printStackTrace();
}
    }//GEN-LAST:event_TAB_deleteActionPerformed

    private void TAB_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TAB_editActionPerformed
       try {
    DefaultTableModel recordTable = (DefaultTableModel) pending_table.getModel();
    int selectedRow = pending_table.getSelectedRow();
    
    if (selectedRow != -1) { 
        int id = Integer.parseInt(recordTable.getValueAt(selectedRow, 0).toString());
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection sql = DriverManager.getConnection(dataconn, username, password);
        PreparedStatement pst = sql.prepareStatement("UPDATE workjob SET check_in = ?, Time = ?, Customer_name = ?, Service_rendered = ?, Price = ?, Employee_Assigned = ? WHERE id = ?");
        
        pst.setString(1, txtCheckin.getText());
        pst.setString(2, txtTime.getText());
        pst.setString(3, txtcstname.getText());
        pst.setString(4, txtsr.getText());
        pst.setString(5, txtprice.getText());
        pst.setString(6, txtea.getText());  
        pst.setInt(7, id);

        int rowsAffected = pst.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Record Updated");
            recordTable.setRowCount(0);
            UpdateDb(); 
        } else {
            JOptionPane.showMessageDialog(this, "No record was updated.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
        pst.close();
        sql.close();
    } else {
        JOptionPane.showMessageDialog(this, "Please select a row to update.", "Warning", JOptionPane.WARNING_MESSAGE);
    }
} catch (ClassNotFoundException | SQLException | NumberFormatException ex) {
    JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
    ex.printStackTrace(); // Print stack trace for debugging
}
    }//GEN-LAST:event_TAB_editActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static cell.actionButton TAB_delete;
    public static cell.actionButton TAB_edit;
    // End of variables declaration//GEN-END:variables





}